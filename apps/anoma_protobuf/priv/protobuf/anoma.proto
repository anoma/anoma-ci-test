syntax = "proto3";

package Anoma.Proto;

import "executor.proto";
import "intents.proto";
import "mempool.proto";
import "nock.proto";

/*
 The intents service allows adding intents to the intent pool,
 or retrieve all current intents in the intentpool.
 */
service IntentpoolService {
  rpc Add(Anoma.Proto.Intentpool.Add.Request)
      returns (Anoma.Proto.Intentpool.Add.Response) {}

  rpc List(Anoma.Proto.Intentpool.List.Request)
      returns (Anoma.Proto.Intentpool.List.Response) {}

  rpc Verify(Anoma.Proto.Intentpool.Verify.Request)
      returns (Anoma.Proto.Intentpool.Verify.Response) {}

  rpc Compose(Anoma.Proto.Intentpool.Compose.Request)
      returns (Anoma.Proto.Intentpool.Compose.Response) {}
}

/*
 The mempool service allows adding intents to the mempool.
 */
service MempoolService {
  rpc Add(Anoma.Proto.Mempool.Add.Request) returns (Anoma.Proto.Mempool.Add.Response) {}
}

/*
 The Nock service allows a user to make nock requests to the client.
*/
service NockService {
  rpc Prove(Anoma.Proto.Nock.Prove.Request)
      returns (Anoma.Proto.Nock.Prove.Response) {}

  rpc Run(Anoma.Proto.Nock.Run.Request)
      returns (Anoma.Proto.Nock.Run.Response) {}
}

/*
 * Add a read-only transaction to the executor.
*/
service ExecutorService {
  rpc Add(Anoma.Proto.Executor.AddROTransaction.Request)
      returns (Anoma.Proto.Executor.AddROTransaction.Response) {}
}
