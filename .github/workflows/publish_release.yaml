# Build Release
#
# I publish a release on GitHub
name: Publish Release
on:
  workflow_call:

jobs:
  build_release:
    runs-on: ubuntu-latest
    steps:
      - name: checkout the repository
        uses: actions/checkout@v4

        #---------------------------------------------------------------------------
        # Create a GitHub release

      - name: ensure that the release does not exist yet
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          export RELEASE=$(gh release list --json name | jq '.[] | select(.name == "${{ github.ref_name }}") | .name') ; \
          test -z "${RELEASE}" || echo "release ${RELEASE} already exists"

      - name: create the release on github
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          gh release create ${{ github.ref_name }} \
          --title ${{ github.ref_name }}           \
          --repo ${{ github.repository }}

      #---------------------------------------------------------------------------
      # Add the client binary to the release

      - name: Download a single artifact
        uses: actions/download-artifact@v4
      - name: Display structure of downloaded files
        run: ls -R output
      - name: Display structure of downloaded files
        run: ls -la
      # #---------------------------------------------------------------------------
      # # Push artifacts for this release

      # - name: publish client release
      #   shell: bash
      #   env:
      #     GH_TOKEN: ${{ secrets.github_token }}
      #   run: |
      #     gh release upload ${{ inputs.release_name }} \
      #       --clobber                                  \
      #       apps/anoma_client/anoma_client

      # Example
      #
      # - name: publish node release
      #   shell: bash
      #   env:
      #     GH_TOKEN: ${{ secrets.github_token }}
      #   run: |
      #     gh release upload ${{ inputs.release_name }} \
      #     --clobber                                    \
      #     apps/anoma_node/anoma_node
